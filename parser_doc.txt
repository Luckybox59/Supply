# Краткая документация (v2)

Ниже — короткая инструкция по приложению. Полная (устаревающая) версия оставлена далее для справки.

## Что делает
* __Парсит__ PDF/XLS/XLSX счета и, при необходимости, заявку.
* __Извлекает JSON__ через OpenRouter (LLM) для каждого файла.
* __Сравнивает__ 1 заявку и 1 счет и формирует Markdown‑отчет по __локальному Jinja2‑шаблону__ `REPORT_TEMPLATE_PATH`.
* __Создаёт карточку изделия__ (текстовый `.txt`) и при подтверждении __отправляет письмо__ с вложениями по SMTP.

## Быстрый старт
* __GUI__: `python gui.py`
* Запускайте из нужной папки заказа (чтобы все файлы читались/сохранялись в текущей директории).

## Требования (pip)
```
pip install pandas easyocr requests numpy pdf2image openpyxl xlrd pdfplumber Jinja2
```
Дополнительно: установить Poppler и указать путь в `config.POPPLER_PATH`.

## Настройки (config.py / secrets.json / ENV)
* __OPENROUTER_API_KEY__ — ключ OpenRouter.
* __DEFAULT_MODEL__ — модель LLM (по умолчанию `qwen/qwen-2.5-72b-instruct:free`).
* __POPPLER_PATH__ — путь к bin Poppler для PDF.
* __SMTP_SERVER/PORT/USER/PASSWORD, FROM_EMAIL__ — SMTP для отправки письма.
* __APP_REFERRER, APP_TITLE__ — метаданные для OpenRouter.
* __PARSER_PARALLEL__ — параллельная обработка ("1"/"true" = вкл.).
* __REPORT_TEMPLATE_PATH__ — путь к шаблону отчета Jinja2 (`Шаблон отчета для Parser.md.j2`).
* __folder_paid_label__ (settings.json) — метка оплаты, добавляемая к имени папки заказа после отправки письма.
  Вставляется непосредственно перед последней `)`; если `)` нет — добавляется в конец имени без дополнительных пробелов/скобок.

Секреты можно задать в `secrets.json` рядом с `config.py` или через переменные окружения.

## Как пользоваться (коротко)
1) Выберите (необязательно) __заявку__, затем один или несколько __счетов__.
2) Скрипт очистит текст, отправит все выбранные файлы одним запросом в LLM и сохранит по одному JSON: `<имя_исходного_файла>_extracted.json`.
3) Если выбраны ровно 1 заявка и 1 счет — будет создан общий отчет `comparison_report.md` по локальному шаблону.
4) Будет сгенерирована __карточка изделия__ — файл `Карточка изделия.txt`. При подтверждении письмо отправится по SMTP с вложениями.
5) После успешной отправки: папка заказа автоматически помечается меткой оплаты (см. `folder_paid_label`),
   а в GUI очищаются все данные, сформированные после LLM (кроме лога).

## Отчет по шаблону (Jinja2)
* Файл шаблона по умолчанию: `Шаблон отчета для Parser.md.j2`.
* Доступные переменные: `app_name`, `inv_name`, `matches`, `only_in_app`, `only_in_inv`.
* При ошибке чтения/рендера шаблона выполнение прекращается с ошибкой (см. логи). Ручная разметка не используется.

## Точки входа
* GUI — `gui.py`.

## Частые проблемы (кратко)
* __PDF не читает__: проверьте `POPPLER_PATH`. Вначале пробуется `pdfplumber`, затем OCR (`pdf2image`+`easyocr`).
* __.xls падает__: установите `xlrd` (в коде используется `encoding_override='cp1251'`).
* __LLM вернул мусор__: сохраняется raw; проверьте соединение/API ключ, попробуйте повторить.
* __SMTP__: проверьте порт (465 SSL / 587 STARTTLS), учетные данные и доступ из сети.
* __Windows Проводник__: окна Проводника не обновляются автоматически на новый путь после переименования папки.